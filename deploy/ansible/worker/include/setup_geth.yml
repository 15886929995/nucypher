- name: "Setup Ethereum"
  hosts: "{{ nucypher_hosts | default('cassandra') }}"
  remote_user: "{{default_user}}"
  gather_facts: no
  tasks:
    # needs to wait a few seconds if run directly after installing docker
    - name: "pull ethereum/client-go:latest"
      become: yes
      become_user: nucypher
      docker_image:
        name: ethereum/client-go:latest
        source: pull

    - name: "check if the geth.ipc exists (if it does, we skip syncing steps)"
      become: yes
      stat:
        path: "{{geth_dir}}/geth.ipc"
      register: geth_running

    - name: "make sure no previously running geth syncs are still running"
      become: yes
      become_user: nucypher
      docker_container:
        name: geth-sync
        state: absent
      when: geth_running.stat.exists == False
      ignore_errors: yes

    - name: "run geth until it finishes syncing (time to get up and go for a walk)"
      become: yes
      become_user: nucypher
      command: "docker run --name geth-sync -v /home/nucypher/geth:/root ethereum/client-go:latest {{geth_options}} --exitwhensynced --ipcdisable"
      async: 100000
      poll: 0
      register: geth_sync_status
      when: geth_running.stat.exists == False

    - name: 'check if geth is finished syncing...'
      become: yes
      become_user: nucypher
      until: job_result.finished
      retries: 10000
      when: geth_running.stat.exists == False
      register: job_result
      async_status:
        jid: "{{ geth_sync_status['ansible_job_id'] }}"

    - name: "run geth {{geth_options}} forever in the background"
      become: yes
      become_user: nucypher
      docker_container:
        name: geth
        state: started
        image: ethereum/client-go:latest
        restart_policy: "unless-stopped"
        command: "{{geth_options}}"
        volumes:
          - /home/nucypher/geth:/root

    - name: Recursively change ownership of geth directory
      become: yes
      file:
        path: /home/nucypher/geth
        state: directory
        recurse: yes
        owner: nucypher
