- name: "Setup Ethereum"
  hosts: "{{ nucypher_hosts | default('cassandra') }}"
  remote_user: "{{default_user}}"
  gather_facts: no
  tasks:

    - name: "create geth directory"
      become: yes
      file:
        path: /home/nucypher/geth/
        state: directory
        mode: '0755'

    - name: Recursively change ownership of geth directory
      become: yes
      file:
        path: /home/nucypher/geth
        state: directory
        recurse: yes
        owner: nucypher

    # needs to wait a few seconds if run directly after installing docker
    - name: "pull ethereum/client-go:latest"
      become: yes
      docker_image:
        name: ethereum/client-go:latest
        source: pull

    - name: "copy local geth account"
      become: yes
      become_user: nucypher
      copy:
        src: "{{WORKER_ACCT_KEYSTORE_PATH}}"
        dest: "{{geth_dir}}keystore"
        owner: nucypher
      when: WORKER_ACCT_KEYSTORE_PATH is not undefined

    - name: "check for existing account"
      become: yes
      stat:
        path: "{{geth_dir}}account.txt"
      register: account_file

    - name: "echo account_file_exists"
      debug:
        verbosity: 0
        var: account_file.stat.exists

    - name: "get account address from file"
      become: yes
      become_user: nucypher
      command: 'cat {{geth_dir}}account.txt'
      register: remotely_created_account
      when: account_file.stat.exists and NUCYPHER_WORKER_ADDRESS is undefined

    - name: "create password file"
      become: yes
      become_user: nucypher
      copy:
        content: "{{NUCYPHER_WORKER_ETH_PASSWORD}}"
        dest: "/home/nucypher/geth/password.txt"
        owner: nucypher
      when: WORKER_ACCT_KEYSTORE_PATH is undefined and not account_file.stat.exists

    # create a local geth account if one doesn't exist
    - name: "create new account and capture the address"
      become: yes
      become_user: nucypher
      shell:
        cmd: 'docker run -v /home/nucypher/geth:/root ethereum/client-go:latest account new --password /root/password.txt --datadir {{geth_container_datadir}} | grep "Public address of the key:" | cut -d":" -f2- | xargs'
      register: new_geth_account_checksum
      when: not account_file.stat.exists

    # now remove the password.txt needed in the previous step
    - name: "ensure password file is deleted"
      become: yes
      become_user: nucypher
      when: new_geth_account_checksum is not undefined
      file:
        path: "/home/nucypher/geth/password.txt"
        state: absent

    - name: "write new address to file for later use"
      become: yes
      become_user: nucypher
      when: not account_file.stat.exists and new_geth_account_checksum is not undefined
      copy:
        content: "{{new_geth_account_checksum.stdout}}"
        dest: "{{geth_dir}}account.txt"

    - name: "write declared worker address to file if it exists"
      become: yes
      become_user: nucypher
      when: NUCYPHER_WORKER_ADDRESS is not undefined
      copy:
        content: "{{NUCYPHER_WORKER_ADDRESS}}"
        dest: "{{geth_dir}}account.txt"

    - name: "get account address from file"
      become: yes
      become_user: nucypher
      command: 'cat {{geth_dir}}account.txt'
      register: active_account

    - name: "echo worker address"
      debug:
        verbosity: 0
        msg: "{{ active_account.stdout }}"

#### now we sync
    - name: "check if the geth.ipc exists (if it does, we skip syncing steps)"
      become: yes
      stat:
        path: "{{geth_dir}}/geth.ipc"
      register: geth_running

    - name: "make sure no previously running geth syncs are still running"
      become: yes
      become_user: nucypher
      docker_container:
        name: geth-sync
        state: absent
      when: geth_running.stat.exists == False
      ignore_errors: yes

    - name: "run geth until it finishes syncing (time to get up and go for a walk)"
      become: yes
      become_user: nucypher
      command: "docker run --name geth-sync -v /home/nucypher/geth:/root ethereum/client-go:latest {{geth_options}} --exitwhensynced --ipcdisable"
      async: 100000
      poll: 0
      register: geth_sync_status
      when: geth_running.stat.exists == False

    - name: 'check if geth is finished syncing...'
      become: yes
      become_user: nucypher
      until: job_result.finished
      retries: 10000
      when: geth_running.stat.exists == False
      register: job_result
      async_status:
        jid: "{{ geth_sync_status['ansible_job_id'] }}"

    - name: "run geth {{geth_options}} forever in the background"
      become: yes
      become_user: nucypher
      docker_container:
        name: geth
        state: started
        image: ethereum/client-go:latest
        restart_policy: "unless-stopped"
        command: "{{geth_options}}"
        volumes:
          - /home/nucypher/geth:/root
