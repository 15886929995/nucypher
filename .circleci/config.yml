version: 2.0

workflows:
  version: 2
  test:
    jobs:
      - bundle_dependencies-36
      - mypy_type_check:
          requires:
            - bundle_dependencies-36
      - eth_contract_unit:
          requires:
            - bundle_dependencies-36
      - crypto_unit:
          requires:
              - bundle_dependencies-36
      - network_unit:
          requires:
              - bundle_dependencies-36
      - keystore_unit:
          requires:
              - bundle_dependencies-36
      - blockchain_interface_unit:
          requires:
              - bundle_dependencies-36
      - character:
          requires:
              - crypto_unit
              - network_unit
              - keystore_unit
      - intercontract_integration:
          requires:
            - eth_contract_unit

python_36_base: &python_36_base
    working_directory: ~/nucypher-depends
    docker:
      - image: circleci/python:3.6

jobs:
  bundle_dependencies-36:
    <<: *python_36_base
    steps:
      - checkout
      - run:
          name: Install Python Dependencies with Pipenv
          command: |
            pipenv install --three --dev --pre --skip-lock
      - run:
          name: Install Solidity Compiler
          command: pipenv run install_solc
      - save_cache:
          paths:
            - "~/.local/share/virtualenvs/"
          key: v1-deps-{{ .Environment.CIRCLE_WORKFLOW_ID }}-{{ checksum "Pipfile" }}

  blockchain_interface_unit:
    <<: *python_36_base
    steps:
      - checkout
      - restore_cache:
          key: v1-deps-{{ .Environment.CIRCLE_WORKFLOW_ID }}-{{ checksum "Pipfile" }}
      - run:
          name: Blockchain Interface Tests
          command: pipenv run pytest --cov=nucypher/blockchain/eth -v --runslow tests/blockchain/eth/interfaces tests/blockchain/eth/entities

  eth_contract_unit:
    <<: *python_36_base
    parallelism: 4
    steps:
      - checkout
      - restore_cache:
          key: v1-deps-{{ .Environment.CIRCLE_WORKFLOW_ID }}-{{ checksum "Pipfile" }}
      - run:
          name: Ethereum Contract Unit Tests
          command: |
            pipenv run pytest --junitxml=./reports/pytest/eth-contract-unit-report.xml -v --runslow $(circleci tests glob tests/blockchain/eth/contracts/unit/test_*.py | circleci tests split --split-by=timings)
      - store_test_results:
          path: ./reports/pytest/

  crypto_unit:
    <<: *python_36_base
    steps:
      - checkout
      - restore_cache:
          key: v1-deps-{{ .Environment.CIRCLE_WORKFLOW_ID }}-{{ checksum "Pipfile" }}
      - run:
          name: Crypto Character Tests
          command: pipenv run pytest --cov=nucypher/crypto -v --runslow tests/crypto

  network_unit:
    <<: *python_36_base
    steps:
      - checkout
      - restore_cache:
          key: v1-deps-{{ .Environment.CIRCLE_WORKFLOW_ID }}-{{ checksum "Pipfile" }}
      - run:
          name: Network Tests
          command: pipenv run pytest --cov=nucypher/network -v --runslow tests/network

  keystore_unit:
    <<: *python_36_base
    steps:
      - checkout
      - restore_cache:
          key: v1-deps-{{ .Environment.CIRCLE_WORKFLOW_ID }}-{{ checksum "Pipfile" }}
      - run:
          name: Keystore Tests
          command: pipenv run pytest --cov=nucypher/keystore -v --runslow tests/keystore

  character:
    <<: *python_36_base
    steps:
      - checkout
      - restore_cache:
          key: v1-deps-{{ .Environment.CIRCLE_WORKFLOW_ID }}-{{ checksum "Pipfile" }}
      - run:
          name: Character Tests
          command: pipenv run pytest --cov=nucypher/characters -v --runslow tests/characters

  intercontract_integration:
    <<: *python_36_base
    steps:
      - checkout
      - restore_cache:
          key: v1-deps-{{ .Environment.CIRCLE_WORKFLOW_ID }}-{{ checksum "Pipfile" }}
      - run:
          name: Ethereum Inter-Contract Integration Test
          command: |
            pipenv run pytest -v --runslow tests/blockchain/eth/contracts/integration

  mypy_type_check:
    <<: *python_36_base
    steps:
      - checkout
      - restore_cache:
          key: v1-deps-{{ .Environment.CIRCLE_WORKFLOW_ID }}-{{ checksum "Pipfile" }}
      - run:
          name: Run Mypy Static Type Checks
          command: pipenv run mypy --xslt-html-report ./mypy_report ./nucypher
      - store_artifacts:
          path: ./mypy_report
